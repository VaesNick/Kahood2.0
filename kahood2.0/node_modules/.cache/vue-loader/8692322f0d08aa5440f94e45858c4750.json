{"remainingRequest":"C:\\Users\\11600378\\Documents\\GitHub\\Kahood2.0\\kahood2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\11600378\\Documents\\GitHub\\Kahood2.0\\kahood2.0\\src\\components\\CoursePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\11600378\\Documents\\GitHub\\Kahood2.0\\kahood2.0\\src\\components\\CoursePage.vue","mtime":1546964931376},{"path":"C:\\Users\\11600378\\Documents\\GitHub\\Kahood2.0\\kahood2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\11600378\\Documents\\GitHub\\Kahood2.0\\kahood2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\11600378\\Documents\\GitHub\\Kahood2.0\\kahood2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\11600378\\Documents\\GitHub\\Kahood2.0\\kahood2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\n    data() {\n        return {\n            name: 'Groups',\n            groups: [\n                {id:'1', name: 'Group 1', spots: '5',participants: [{name:\"Jos\"}, {name:\"Fred\"}]},\n                {id:'2', name: 'Group 2', spots: '5'},\n                {id:'3', name: 'Group 3', spots: '5'}]\n        }\n    },\n    methods: {\n        showParticipants(id){\n            var participantsField = document.getElementById(\"participantsField\");\n            participantsField.style.display = \"block\";\n\n            for(var i = 0; i < this.groups.length; i++){\n\n                alert(this.groups[id - 1].id == id);\n                if(this.groups.id == id){\n                    for (var j = 0; j < this.groups[id - 1].participants.length; j++){\n                        participantsField.innerHTML += this.groups[id - 1].participants[j].name;\n                    }\n                }\n            }\n        },\n        enroll: function (e) {\n            if((e.currentTarget).innerText == \"Enroll\"){\n                (e.currentTarget).innerText = \"Unroll\";\n            } else{\n                (e.currentTarget).innerText = \"Enroll\";\n            }\n        },\n        mounted() {\n            var self = this;\n            this.axios\n                .get('http://localhost:8080/students/getAllCourses')\n                .then(function (res) {\n                    self.courseList = res.data;\n                })\n        }\n    }\n}\n\n\n",{"version":3,"sources":["CoursePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CoursePage.vue","sourceRoot":"src\\components","sourcesContent":["<template>\n    <div id=\"container\">\n        <input type=\"hidden\" id=\"idField\" :value=\"$route.params.id\">\n        <h3 class=\"mt-4 mb-4 float-left\">{{name}}</h3>\n\n        <table class=\"table\" id=\"employeeTable\" data-show-toggle=\"false\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Amount of free spots</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"g in groups\">\n                        <tr v-bind:key=\"g.id\">\n                            <td>{{g.name}}</td>\n                            <td>{{g.spots}} free</td>\n                            <td><button type=\"submit\" @click=\"enroll($event)\">Enroll</button></td>\n                            <td><button type=\"submit\" @click=\"showParticipants(g.id)\">Participants</button></td>\n                        </tr>\n                </template>\n            </tbody>\n        </table>\n        <div id=\"participantsField\" type=\"text\" style=\"display:none\"></div>\n    </div>\n</template>\n\n<script>\n    export default {\n\n        data() {\n            return {\n                name: 'Groups',\n                groups: [\n                    {id:'1', name: 'Group 1', spots: '5',participants: [{name:\"Jos\"}, {name:\"Fred\"}]},\n                    {id:'2', name: 'Group 2', spots: '5'},\n                    {id:'3', name: 'Group 3', spots: '5'}]\n            }\n        },\n        methods: {\n            showParticipants(id){\n                var participantsField = document.getElementById(\"participantsField\");\n                participantsField.style.display = \"block\";\n\n                for(var i = 0; i < this.groups.length; i++){\n\n                    alert(this.groups[id - 1].id == id);\n                    if(this.groups.id == id){\n                        for (var j = 0; j < this.groups[id - 1].participants.length; j++){\n                            participantsField.innerHTML += this.groups[id - 1].participants[j].name;\n                        }\n                    }\n                }\n            },\n            enroll: function (e) {\n                if((e.currentTarget).innerText == \"Enroll\"){\n                    (e.currentTarget).innerText = \"Unroll\";\n                } else{\n                    (e.currentTarget).innerText = \"Enroll\";\n                }\n            },\n            mounted() {\n                var self = this;\n                this.axios\n                    .get('http://localhost:8080/students/getAllCourses')\n                    .then(function (res) {\n                        self.courseList = res.data;\n                    })\n            }\n        }\n    }\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    #container {\n        width: 80%;\n        background-color: #FF99;\n        display: inline-block;\n    }\n\n    h1 {\n        margin: 0;\n        padding: 0;\n        color: white;\n    }\n\n    table{\n        width: 90%;\n        display: inline;\n    }\n    th {\n        text-align: left;\n    }\n    td {\n        text-align: left;\n        padding-right: 10px;\n    }\n\n</style>\n"]}]}